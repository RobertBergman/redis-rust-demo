# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
# Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# RustRover
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# VS Code
.vscode/
*.code-workspace

# Local .env files
.env
.env.local
.env.*.local

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Linux
*~
.directory

# Vim
*.swp
*.swo

# Emacs
\#*\#
.\#*

# Redis dump files
dump.rdb
*.rdb
appendonly.aof
*.aof

# Coverage reports
*.profraw
*.profdata
coverage/
lcov.info
cobertura.xml

# Benchmark results
/target/criterion

# Documentation build
/target/doc

# Temporary files
*.tmp
*.temp
tmp/
temp/

# Log files
*.log
logs/

# Test artifacts
test-results/
junit.xml

# Python (for any helper scripts)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
venv/
ENV/

# Node.js (for any web components)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Backup files
*.bak
*.backup

# IDE specific files
*.iml
.project
.classpath
.settings/

# Rust specific
**/*.rs.fmt

# Build artifacts
dist/
build/

# Local configuration
config.local.toml
settings.local.json
